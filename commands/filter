#!/usr/bin/python

import sys
import os.path
import argparse

# from termcolor import cprint
from functools import partial
from command import TypedValue, panic, T_STRING, T_BOOL, T_PATH, typed


@typed(T_PATH, T_BOOL)
def exists(path):
    return os.path.exists(path)


@typed(T_PATH, T_BOOL)
def isdir(path):
    return os.path.isdir(path)


@typed(T_PATH, T_BOOL)
def isfile(path):
    return os.path.isfile(path)


@typed(T_STRING, T_BOOL)
def contains(substr, inp):
    return substr in inp


commands = {
    "exists": exists,
    "isdir": isdir,
    "isfile": isfile,
    "contains": contains,
}

parser = argparse.ArgumentParser(description='filter')
parser.add_argument('command', help='todo')
parser.add_argument('args', help='todo', nargs='*')

args = parser.parse_args()

try:
    command = commands[args.command]
except KeyError:
    panic("Command not found: '{}'".format(args.command))

# Partially apply the command

if len(args.args) > 0:
    command = partial(command, *args.args)

for line in sys.stdin:
    if line.endswith("\r\n"):
        line = line[:-2]
    if line.endswith("\n"):
        line = line[:-1]

    line = line.strip()
    line_typed = TypedValue(line, T_STRING)

    out = command(line_typed)
    if out.fpstype == T_BOOL:
        if out.value:
            print(line_typed.value)
    else:
        panic("Wrong return type")
